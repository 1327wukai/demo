<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.springbootdemo.dao.AttendanceDao">

    <resultMap type="Attendance" id="AttendanceResult">
        <result property="attendEmpNo" column="attendEmpNo"/>
        <result property="empNo" column="empNo"/>
        <result property="userId" column="userId"/>
        <result property="attendEmpName" column="attendEmpName"/>
        <result property="checkInTime" column="checkInTime"/>
        <result property="checkOutTime" column="checkOutTime"/>
        <result property="checkStatus" column="checkStatus"/>
    </resultMap>

    <!--    prefix:在trim标签内sql语句加上前缀。
      suffix:在trim标签内sql语句加上后缀。
      suffixOverrides:指定去除多余的后缀内容，如：suffixOverrides=","，去除trim标签内sql语句多余的后缀","。
      prefixOverrides:指定去除多余的前缀内容 -->

    <sql id="selectAttendanceVo">
        select attendEmpNo, empNo, userId, attendEmpName, checkInTime, checkOutTime, checkStatus
        from tb_attendance
    </sql>


    <!-- 查询表中总记录数 -->
    <select id="queryAttendanceCount" resultType="Long">
        select count(*) from tb_attendance
    </select>

    <select id="selectAllAttendance" parameterType="Attendance" resultMap="AttendanceResult">
        select *
        from tb_attendance
    </select>


    <!--迷糊查询-->
    <select id="selectAttendanceLikeList" parameterType="Attendance" resultMap="AttendanceResult">
        <include refid="selectAttendanceVo"/>
        <where>
            <if test="empNo != null "> and empNo = #{empNo}</if>
            <if test="userId != null "> and userId = #{userId}</if>
            <if test="attendEmpName != null  and attendEmpName != ''"> and attendEmpName like concat('%', #{attendEmpName}, '%')</if>
            <if test="checkInTime != null "> and checkInTime = #{checkInTime}</if>
            <if test="checkOutTime != null "> and checkOutTime = #{checkOutTime}</if>
            <if test="checkStatus != null "> and checkStatus = #{checkStatus}</if>
        </where>
    </select>

    <select id="selectAttendanceByAttendEmpNo" parameterType="Integer" resultMap="AttendanceResult">
        <include refid="selectAttendanceVo"/>
        where attendEmpNo = #{attendEmpNo}
    </select>

    <insert id="insertAttendance" parameterType="Attendance" useGeneratedKeys="true" keyProperty="attendEmpNo">
        insert into tb_attendance
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="empNo != null">empNo,</if>
            <if test="userId != null">userId,</if>
            <if test="attendEmpName != null and attendEmpName != ''">attendEmpName,</if>
            <if test="checkInTime != null">checkInTime,</if>
            <if test="checkOutTime != null">checkOutTime,</if>
            <if test="checkStatus != null">checkStatus,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="empNo != null">#{empNo},</if>
            <if test="userId != null">#{userId},</if>
            <if test="attendEmpName != null and attendEmpName != ''">#{attendEmpName},</if>
            <if test="checkInTime != null">#{checkInTime},</if>
            <if test="checkOutTime != null">#{checkOutTime},</if>
            <if test="checkStatus != null">#{checkStatus},</if>
        </trim>
    </insert>

    <update id="updateAttendance" parameterType="Attendance">
        update tb_attendance
        <trim prefix="SET" suffixOverrides=",">
            <if test="empNo != null">empNo = #{empNo},</if>
            <if test="userId != null">userId = #{userId},</if>
            <if test="attendEmpName != null and attendEmpName != ''">attendEmpName = #{attendEmpName},</if>
            <if test="checkInTime != null">checkInTime = #{checkInTime},</if>
            <if test="checkOutTime != null">checkOutTime = #{checkOutTime},</if>
            <if test="checkStatus != null">checkStatus = #{checkStatus},</if>
        </trim>
        where attendEmpNo = #{attendEmpNo}
    </update>

    <delete id="deleteAttendanceByAttendEmpNo" parameterType="Integer">
        delete
        from tb_attendance
        where attendEmpNo = #{attendEmpNo}
    </delete>

    <delete id="deleteAttendanceByAttendEmpNos" parameterType="String">
        delete from tb_attendance where attendEmpNo in
        <foreach item="attendEmpNo" collection="array" open="(" separator="," close=")">
            #{attendEmpNo}
        </foreach>
    </delete>
</mapper>