<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.springbootdemo.dao.DepartmentDao">

    <resultMap type="Department" id="DepartmentResult">
        <result property="deptNo"    column="deptNo"    />
        <result property="userId"    column="userId"    />
        <result property="deptName"    column="deptName"    />
        <result property="deptRemark"    column="deptRemark"    />
        <result property="deptNum"    column="deptNum"    />
        <result property="status"    column="status"    />
        <result property="deptLeader"    column="deptLeader"    />
    </resultMap>

    <sql id="selectDepartmentVo">
        select deptNo, userId, deptName, deptRemark, deptNum, status, deptLeader from tb_department
    </sql>

    <select id="selectDepartmentList" parameterType="Department" resultMap="DepartmentResult">
        <include refid="selectDepartmentVo"/>
        <where>
            <if test="userId != null "> and userId = #{userId}</if>
            <if test="deptName != null  and deptName != ''"> and deptName like concat('%', #{deptName}, '%')</if>
            <if test="deptRemark != null  and deptRemark != ''"> and deptRemark = #{deptRemark}</if>
            <if test="deptNum != null "> and deptNum = #{deptNum}</if>
            <if test="status != null  and status != ''"> and status = #{status}</if>
            <if test="deptLeader != null "> and deptLeader = #{deptLeader}</if>
        </where>
    </select>

    <select id="selectDepartmentByDeptNo" parameterType="Integer" resultMap="DepartmentResult">
        <include refid="selectDepartmentVo"/>
        where deptNo = #{deptNo}
    </select>

    <insert id="insertDepartment" parameterType="Department">
        insert into tb_department
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="deptNo != null">deptNo,</if>
            <if test="userId != null">userId,</if>
            <if test="deptName != null and deptName != ''">deptName,</if>
            <if test="deptRemark != null and deptRemark != ''">deptRemark,</if>
            <if test="deptNum != null">deptNum,</if>
            <if test="status != null and status != ''">status,</if>
            <if test="deptLeader != null">deptLeader,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="deptNo != null">#{deptNo},</if>
            <if test="userId != null">#{userId},</if>
            <if test="deptName != null and deptName != ''">#{deptName},</if>
            <if test="deptRemark != null and deptRemark != ''">#{deptRemark},</if>
            <if test="deptNum != null">#{deptNum},</if>
            <if test="status != null and status != ''">#{status},</if>
            <if test="deptLeader != null">#{deptLeader},</if>
        </trim>
    </insert>

    <update id="updateDepartment" parameterType="Department">
        update tb_department
        <trim prefix="SET" suffixOverrides=",">
            <if test="userId != null">userId = #{userId},</if>
            <if test="deptName != null and deptName != ''">deptName = #{deptName},</if>
            <if test="deptRemark != null and deptRemark != ''">deptRemark = #{deptRemark},</if>
            <if test="deptNum != null">deptNum = #{deptNum},</if>
            <if test="status != null and status != ''">status = #{status},</if>
            <if test="deptLeader != null">deptLeader = #{deptLeader},</if>
        </trim>
        where deptNo = #{deptNo}
    </update>

    <delete id="deleteDepartmentByDeptNo" parameterType="Integer">
        delete from tb_department where deptNo = #{deptNo}
    </delete>

    <delete id="deleteDepartmentByDeptNos" parameterType="String">
        delete from tb_department where deptNo in
        <foreach item="deptNo" collection="array" open="(" separator="," close=")">
            #{deptNo}
        </foreach>
    </delete>
</mapper>